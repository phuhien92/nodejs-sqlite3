{"version":3,"file":"static/webpack/static/development/pages/events.js.4117ed7e03145bf2e25c.hot-update.js","sources":["webpack:///./components/Header/HeaderRightMenu.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport { showPageLoading, logoutUser, unauthUser } from '../../actions';\nimport Button from '../Button';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst List = styled.ul`\n  display: flex;\n  float: right;\n  justify-content: flex-end;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  @media only screen and (max-width: 488px) {\n    justify-content: space-evenly;\n    width: 100%;\n  }\n`;\n\n// const IMAGE = styled.img`\n//   border-radius: 3px;\n//   width: 60px;\n//   box-shadow: 0 5px 6px #7c7e79;\n// `;\n\nconst LoginContainer = styled.div`\n  display: inline-block;\n\n  @media only screen and (max-width: 488px) {\n    display: none;\n  }\n`;\n\nconst ItemTitle = styled.div`\n  color: #fff;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 2px solid transparent;\n  transition: all 0.1s linear;\n  opacity: 0.6;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst HeaderMenu = (props) => {\n  const goTo = (e) => {\n    e.preventDefault();\n    const path = e.currentTarget.getAttribute('href');\n    if (!path || window.location.pathname === path) return;\n    props.showPageLoading();\n    Router.push(path);\n  };\n\n  const logoutHandler = (e) => {\n    e.preventDefault();\n    props.logout()\n    .then( () => {\n      props.unAuthUser();\n      Router.push('/login');\n    })\n    .catch((error) => {\n      console.error(\"Header Right Menu :\", error);\n    });\n  };\n\n  const login = !props.auth.isAuthenticated && (\n    <HeaderMenuItem>\n      <a href=\"/login\" title=\"login / sign up\" onClick={goTo}>\n        <Button>Login / Sign up</Button>\n      </a>\n    </HeaderMenuItem>\n  );\n\n  const account = props.auth.isAuthenticated && (\n    <HeaderMenuItem >\n      <a href=\"/account\" title=\"account\" onClick={goTo}>\n        <ItemTitle>Account</ItemTitle>\n      </a>\n    </HeaderMenuItem>\n  )\n\n  const event_types = props.auth.isAuthenticated && (\n    <HeaderMenuItem>\n      <a href=\"/events\" title=\"events\" onClick={goTo}>\n        <ItemTitle>Event Types</ItemTitle>\n      </a>\n    </HeaderMenuItem>\n  )\n\n  const logout = props.auth.isAuthenticated && (\n    <LoginContainer>\n      <HeaderMenuItem>\n        <a href=\"/logout\" title=\"logout\" onClick={logoutHandler}>\n          <ItemTitle>Logout</ItemTitle>\n        </a>\n      </HeaderMenuItem>\n    </LoginContainer>\n  );\n\n  return (\n    <List>\n      {event_types}\n      {account}\n      {logout}\n      {login}\n    </List>\n  );\n};\n\nHeaderMenu.propTypes = {\n  showPageLoading: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ auth }) => ({ auth });\n\nconst mapDispatchToProps = dispatch => ({\n  showPageLoading: () => dispatch(showPageLoading()),\n  logout: () => dispatch(logoutUser()),\n  unAuthUser: () => dispatch(unauthUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMenu);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AAOA;AAQA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}