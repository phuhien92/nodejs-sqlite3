{"version":3,"file":"static/webpack/static/development/pages/account.js.566fde6655d9ae5096a5.hot-update.js","sources":["webpack:///./components/Button/Button.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport { spin } from '../../helpers/animations';\n\nconst StyledButton = styled.button`\n  color: #000;\n  font-weight: 300;\n  text-align: center;\n  text-decoration: none;\n  line-height: 20px;\n  cursor: pointer;\n  outline: none;\n  padding: 12px 12px 11px;\n  border-radius: 0;\n  display: inline-block;\n  user-select: none;\n  box-sizing: border-box;\n  font-size: 16px;\n  min-width: 80px;\n  border-radius: 4px;\n\n  ${({ link }) =>\n  link &&\n  css`\n    color: #000;\n    background: none;\n    border: none;\n  `};\n\n  ${({ color }) => {\n    if (color === 'blue') {\n      return css`\n        background-color: #00a2ff;\n        border: 1px solid #00a2ff;\n        color: #fff;\n        :hover {\n          background-color: #005596;\n          border: 1px solid #005596;\n        }\n      `;\n    }\n\n    if (color === 'purple') {\n      return css`\n        background: linear-gradient(to right, #7e57c2, #6200ea);\n        box-shadow: 0 5px 6px rgba(81, 45, 168, 0.5);\n        :focus,\n        :hover {\n          box-shadow: 0 6px 15px rgba(81, 45, 168, 0.5);\n        }\n      `;\n    }\n    if (color === 'gray') {\n      return css`\n        color: black;\n        background: linear-gradient(to right, #e0e0e0, #bdbdbd);\n        box-shadow: 0 5px 6px rgba(160, 160, 160, 0.5);\n        border-color: #ccc;\n        :focus,\n        :hover {\n          box-shadow: 0 6px 15px rgba(160, 160, 160, 0.5);\n        }\n      `;\n    }\n    return null;\n  }};\n\n  ${({ size }) => size === 'large' && css`\n    padding: 14px 20px;\n    font-size: 18px;\n    min-width: 180px;\n  `}\n\n  ${({ size }) => size === 'small' && css`\n    padding: 5px 10px;\n    font-size: 12px;\n  `}\n`;\n\nconst Icon = styled(SVG)`\n  svg {\n    width: 16px;\n    height: 16px;\n    margin-right: 12px;\n    stroke: #fff;\n\n    ${({ type }) =>\n      type === 'loader' &&\n      css`\n        width: 20px;\n        height: 20px;\n        margin: 0;\n        animation: ${spin} 1s linear infinite;\n      `};\n\n    ${({ round }) => round && css`\n        width: 15px;\n        height: 15px;\n        margin: 0;\n      `};\n\n    ${({ color }) => color === 'gray' && css`\n        stroke: #444;\n      `};\n\n    @media only screen and (max-width: 768px) {\n      width: 12px;\n      height: 12px;\n      margin-right: 6px;\n    }\n  }\n`;\n\nconst Button = props => {\n  const SVGIcon = props.icon ? (\n    <Icon\n      type={props.icon}\n      round={props.round}\n      color={props.color}\n      src={`/images/${props.icon}.svg`}\n    />\n  ) : (\n    ''\n  );\n  return (\n    <StyledButton {...props}>\n      {SVGIcon}\n      {props.icon !== 'loader' && props.children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string,\n  icon: PropTypes.string,\n  round: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nButton.defaultProps = {\n  color: 'blue',\n  icon: '',\n  type: '',\n  round: false,\n};\n\nexport default Button;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AASA;AACA;AACA;AACA;AAQA;AACA;AAAA;AACA;AAUA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAMA;AAOA;AAAA;AAAA;AASA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}