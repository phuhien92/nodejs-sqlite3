{"version":3,"file":"static/webpack/static/development/pages/events/edit.js.36fdb088f1ca9af0c90c.hot-update.js","sources":["webpack:///./components/AvailabilityForm/AvailabilityItem.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport Button from '../Button';\n\nconst AvaiItem = styled.div`\n    position: relative;\n    margin-bottom: 15px;\n    border: 1px solid #d1d1d1!important;\n    padding: 15px;\n    width: 100%;\n    min-height: 160px;\n    float: left;\n    border-radius: 6px;\n    background: #f2f2f2;\n\n    &.active {\n        background: #fff;\n    }\n\n    &:nth-child(odd) {\n        margin: 0 2% 2% 0;\n    }\n`;\n\nconst Title = styled.p`\n    color: #333538;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.4;\n    margin-top: 0;\n`;\n\nconst Text = styled.div`\n    margin-top: 10px;\n    font-size: 12px;\n`;\n\nconst StyledSwitcher = styled.div`\n    position: absolute;\n    bottom: 15px;\n    color: #fff;\n    padding: 5px;\n    font-weight: 600;\n    font-size: 13px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    background: #f53b38;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    &.active {\n        background: #43aa8b;\n        span {\n            order: 1;\n        }\n        .switcher {\n            order: 2;\n        }\n    }\n\n    .switcher {\n        width: 12px;\n        height: 12px;\n        margin: 3px;\n        border-radius: 50%;\n        background: #fff;        \n    }\n`;\n\nconst ButtonWrapper = styled.div`\n    position: absolute;\n    right: 15px;\n    bottom: 15px;\n\n    > button {\n        padding: 0;\n        min-width: auto;\n        font-size: 12px;\n        font-weight: 700;\n\n    }\n`;\n\nconst dateOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconst getWeekday = index => (dateOfWeek[index]);\n\nconst getTimeRangeStr = (slotType, timeRange) => {\n  const txt = timeRange.map((time) => {\n    const timeString = slotType === 'recur' ? [time.start, time.end].join(' - ') : time.start;\n    return timeString;\n  });\n\n  return txt.join(' , ');\n};\n\nclass AvailabilityItem extends React.Component {\n\n    state = {\n        active: false,\n        index: 0,\n        slot: null,\n        open: true\n    }\n\n    componentDidMount() {\n\n        let {\n            slot, \n            active, \n            index\n        } = this.props;\n\n        this.setState({\n            slot, active, index\n        })\n    }\n\n    toggleAvaiSwitcher = () => {\n        let {active} = this.state;\n        \n        this.setState({\n            active: !active\n        }, () => {\n\n        })\n    }\n\n    render () {\n        let {slot, active} = this.state;\n        let {openModal, index} = this.props;\n\n        const weekdayName = getWeekday(index);\n        const slotType  = slot && slot.type ? slot.type : '';\n        const timeRange = slot && slot.timeRange ? slot.timeRange.filter(time => time.type === slotType) : [];\n        const timeRangeStr = getTimeRangeStr(slotType, timeRange);\n        const classes = classnames({'active' : active });\n\n        return (\n        <AvaiItem className={classes}>\n            <Title>{weekdayName}</Title>\n            <Text>{timeRangeStr}</Text>\n            <StyledSwitcher className={classes} onClick={this.toggleAvaiSwitcher} data-index={index}>\n                <span className=\"switcher\"></span>\n                <span>{active ? \"ON\":\"OFF\"}</span>\n            </StyledSwitcher>\n            {active && \n            <ButtonWrapper>\n                <Button link onClick={e => openModal(e, index)}>Edit</Button>\n            </ButtonWrapper>}\n        </AvaiItem>\n        )\n    }\n}\n\nexport default AvailabilityItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAoBA;AAQA;AAKA;AAgCA;AAcA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAmBA;AAAA;AACA;AAEA;AACA;AADA;AAKA;AACA;;;;;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AADA;AAGA;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxDA;AACA;AA0DA;;;;A","sourceRoot":""}