{"version":3,"file":"static/webpack/static/development/pages/events/edit.js.37b1bad94f1c72833b33.hot-update.js","sources":["webpack:///./components/AvailabilityForm/AvailabilityList.js"],"sourcesContent":["import React from 'react';\nimport AvailabilityItem from './AvailabilityItem';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport {\n    hideModal,\n    showModal\n} from '../../actions';\n\nconst List = styled.ul`\n    padding: 0;\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 700px;\n    position: relative;\n`;\n\nclass AvaiList extends React.Component {\n\n    state = {\n        showModal: false\n    }\n\n    openModal = (e,index) => {\n        e.preventDefault();        \n        //console.log(this.props.showModal)\n        this.props.showModal(\n            this.props.availability.slots[index],\n            'availability'\n        );\n        \n    }\n\n    closeModal = () => {\n        this.props.setSubmitting(false);\n        //this.setState({showModal: false})\n        this.props.hideModal()\n        return false;\n    }\n\n    render (){    \n        let view, {\n            availability,\n            toggleAvaiSwitcher\n        } = this.props,\n        {\n            showModal\n        } = this.state;\n        \n        if (availability && availability.slots) {\n            view = availability.slots.map((slot, index) => (\n                <AvailabilityItem \n                    key={index}\n                    slot={slot}\n                    active={slot.on}\n                    index={index}\n                    openModal={this.openModal}\n                    toggleAvaiSwitcher={toggleAvaiSwitcher}\n                />\n            ))\n        }\n\n        return (\n            <React.Fragment>\n                <List>\n                    {view}\n                </List>             \n            </React.Fragment>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        hideModal: () => dispatch(hideModal()),\n        showModal: (modalProps, modalType) => {\n            dispatch(showModal({modalProps, modalType}))\n        }\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(AvaiList);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AAQA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AACA;AAOA;;;;AApDA;AACA;AAsDA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AACA;AACA;;;;A","sourceRoot":""}