{"version":3,"file":"static/webpack/static/development/pages/events/edit.js.92848d92f0929549e556.hot-update.js","sources":["webpack:///./components/BodyWrapper/BodyWrapper.js"],"sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport classnames from 'classnames';\nimport {\n    faTachometerAlt, \n    faCalendar,\n    faCheck,\n    faCog,\n    faAngleDown,\n    faPen,\n    faTrash,\n    faUser,\n    faUsers\n} from '@fortawesome/free-solid-svg-icons';\nimport { auth } from '../../firebase';\nimport PageLoading from '../PageLoading';\nimport { \n    hidePageLoading, \n    showPageLoading,\n    hideModal,\n    showModal\n} from '../../actions';\nimport * as types from '../../actions/actionTypes';\nimport Sidebar from '../Sidebar';\nimport Header from '../Header';\nimport ModalContainer from '../Modals';\n\nlibrary.add(\n    faTachometerAlt,\n    faCalendar,\n    faCheck,\n    faCog,\n    faAngleDown,\n    faPen,\n    faTrash,\n    faUser,\n    faUsers,\n);\n\nconst ContentWrapper = styled.div`\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: row;\n    height: 100%;\n    max-height: 100vh;\n    * {\n        box-sizing: border-box;\n    }\n\n    &.auth-view {\n        overflow: hidden;\n    }\n`;\n\nconst MainContentWrapper = styled.div`\n    overflow-x: hidden;\n    display: flex;\n    flex: 1;\n    height: 100vh;\n    width: 100%;\n    flex-direction: column;\n    &.layout-column {\n        \n        \n    }\n`;\n\nconst ContentInnerWrapper = styled.div`\n    overflow: auto;\n    display: flex;\n    flex: 0 0 auto;\n`;\n\nclass BodyWrapper extends React.Component {\n    componentDidMount() {\n        let {\n            hidePageLoading\n        } = this.props;\n        \n        auth.onAuthStateChanged( ( currentUser ) => {\n            if (currentUser) {\n                this.props.authUser({\n                    uid : currentUser.uid,\n                    photoURL: currentUser.photoURL,\n                    email: currentUser.email,\n                    refreshToken: currentUser.refreshToken             \n                })\n            }\n            hidePageLoading();\n        });\n        \n    }\n    \n    render() {\n        const { \n            children, \n            isAuthenticated, \n            template,\n            pageLoading,\n            modalType,\n            modalBackdrop\n        } = this.props;\n\n        const content = pageLoading ? <PageLoading/> : children;\n\n        const classes = classnames({\n            'auth-view': isAuthenticated\n        });\n\n        //console.log(modalType)\n\n        return (\n            <ContentWrapper className={classes}>\n                {template === 'admin' && <Sidebar {...this.props}/>}\n                <MainContentWrapper className={isAuthenticated ? \"layout-column\":\"\"}>\n                    {!pageLoading && <Header {...this.props}/>}\n                    <ContentInnerWrapper>\n                        {content}\n                    </ContentInnerWrapper>\n                </MainContentWrapper>\n                <ModalContainer modalType={modalType} modalBackdrop={modalBackdrop}/>\n                {modalType && modalBackdrop ? <StyledModalBackdrop /> : null}\n            </ContentWrapper>\n        )\n    }\n}\n\nBodyWrapper.propTypes = {\n    children: PropTypes.node,\n    hidePageLoading: PropTypes.func.isRequired,\n    pageLoading: PropTypes.bool.isRequired,\n    norenew: PropTypes.bool\n}\n\nBodyWrapper.defaultProps = {\n    norenew: false,\n    modalType: null\n}\n\nconst mapStateToProps = ({\n    loading: { page: pageLoading } , \n    auth: { isAuthenticated },\n    modal: { modalType, modalProps, modalBackdrop }\n}) => {\n    return ({\n        pageLoading,\n        isAuthenticated,\n        modalType,\n        modalProps,\n        modalBackdrop\n    })\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authUser: (payload) => dispatch({type: types.AUTH_USER, payload: payload}),\n        hidePageLoading: () => dispatch(hidePageLoading()),\n        showPageLoading: () => dispatch(showPageLoading()),\n        hideModal: () => dispatch(hideModal()),\n        showModal: (modalProps, modalType) => {\n            dispatch(showModal({modalProps, modalType}))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyWrapper);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAYA;AAeA;AAaA;AACA;AAKA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AADA;AACA;AAKA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AAAA;AAIA;;;;AAnDA;AACA;AAqDA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;AASA;AACA;AACA;;;;A","sourceRoot":""}